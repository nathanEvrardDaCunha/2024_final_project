import { useState, useEffect } from 'react';import {	getLocation,	completeLocationPaperwork,	removeLocationDocument,	uploadLocationImageAsPaperAsset} from './adminLocationService.tsx';import { Location } from '../types/adminLocationType.tsx';const adminLocationReviewHook = (locationId: number) => {	const [location, setLocation] = useState<Location | null>(null);	const [isLoading, setIsLoading] = useState(true);	const [error, setError] = useState<string | null>(null);		useEffect(() => {		fetchLocation();	}, [locationId]);		const fetchLocation = async () => {		try {			const fetchedLocation = await getLocation(locationId);			setLocation(fetchedLocation);		} catch (err) {			setError('Failed to fetch location');		} finally {			setIsLoading(false);		}	};		const uploadImageAsPaperAsset = async (file: File) => {		try {			const updatedLocation = await uploadLocationImageAsPaperAsset(locationId, file);			setLocation(updatedLocation);		} catch (err) {			setError('Failed to upload image');		}	};		const removeDocument = async (documentId: number) => {		try {			const updatedLocation = await removeLocationDocument(locationId, documentId);			setLocation(updatedLocation);		} catch (err) {			setError('Failed to remove document');		}	};		const completePaperwork = async () => {		try {			const updatedLocation = await completeLocationPaperwork(locationId);			setLocation(updatedLocation);		} catch (err) {			setError('Failed to complete paperwork');		}	};		return { location, uploadImageAsPaperAsset, completePaperwork, removeDocument, isLoading, error };};export default adminLocationReviewHook;