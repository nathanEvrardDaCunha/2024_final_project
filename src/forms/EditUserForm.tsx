import React, { useState } from 'react';import editUserFormHook from "../hooks/editUserFormHook";import FormControl from "../components/common/forms/FormControl";import Label from "../components/common/forms/Label";import WarningMessage from "../components/common/WarningMessage";import SubmitButton from "../components/common/forms/SubmitButton";import Input from "../components/common/forms/Input";interface EditUserFormProps {	userInfo: {		email: string;		firstname: string;		lastname: string;		birthDate: string;		phoneNumber: string;	};	onCancel: () => void;	onUpdate: (updatedInfo: any) => void;}const EditUserForm: React.FC<EditUserFormProps> = ({ userInfo, onCancel, onUpdate }) => {	const { formData, errors, isSubmitting, attemptedSubmit, handleChange, handleSubmit } = editUserFormHook(userInfo, onUpdate);	const [showPasswordFields, setShowPasswordFields] = useState(false);		return (		<form onSubmit={handleSubmit}>			<FormControl>				<Label htmlFor="email" text="Email" />				<Input					type="email"					name="email"					value={formData.email}					onChange={handleChange}					placeholder="johndoe@example.com"				/>				{attemptedSubmit && errors.email && <WarningMessage message={errors.email} />}			</FormControl>			<FormControl>				<Label htmlFor="firstname" text="First Name" />				<Input					type="text"					name="firstname"					value={formData.firstname}					onChange={handleChange}					placeholder="John"				/>				{attemptedSubmit && errors.firstname && <WarningMessage message={errors.firstname} />}			</FormControl>			<FormControl>				<Label htmlFor="lastname" text="Last Name" />				<Input					type="text"					name="lastname"					value={formData.lastname}					onChange={handleChange}					placeholder="Doe"				/>				{attemptedSubmit && errors.lastname && <WarningMessage message={errors.lastname} />}			</FormControl>			<FormControl>				<Label htmlFor="birthDate" text="Birth Date" />				<Input					type="date"					name="birthDate"					value={formData.birthDate}					onChange={handleChange}				/>				{attemptedSubmit && errors.birthDate && <WarningMessage message={errors.birthDate} />}			</FormControl>			<FormControl>				<Label htmlFor="phoneNumber" text="Phone Number" />				<Input					type="tel"					name="phoneNumber"					value={formData.phoneNumber}					onChange={handleChange}					placeholder="+33601020304"				/>				{attemptedSubmit && errors.phoneNumber && <WarningMessage message={errors.phoneNumber} />}			</FormControl>			<button type="button" onClick={() => setShowPasswordFields(!showPasswordFields)} className="btn btn-secondary mt-4">				{showPasswordFields ? 'Hide Password Fields' : 'Change Password'}			</button>			{showPasswordFields && (				<>					<FormControl>						<Label htmlFor="currentPassword" text="Current Password" />						<Input							type="password"							name="currentPassword"							value={formData.currentPassword || ''}							onChange={handleChange}							placeholder="Enter your current password"						/>						{attemptedSubmit && errors.currentPassword && <WarningMessage message={errors.currentPassword} />}					</FormControl>					<FormControl>						<Label htmlFor="newPassword" text="New Password" />						<Input							type="password"							name="newPassword"							value={formData.newPassword || ''}							onChange={handleChange}							placeholder="Enter your new password"						/>						{attemptedSubmit && errors.newPassword && <WarningMessage message={errors.newPassword} />}					</FormControl>					<FormControl>						<Label htmlFor="confirmPassword" text="Confirm New Password" />						<Input							type="password"							name="confirmPassword"							value={formData.confirmPassword || ''}							onChange={handleChange}							placeholder="Confirm your new password"						/>						{attemptedSubmit && errors.confirmPassword && <WarningMessage message={errors.confirmPassword} />}					</FormControl>				</>			)}			<div className="flex justify-between mt-4">				<button type="button" onClick={onCancel} className="btn btn-secondary">Cancel</button>				<SubmitButton text="Update Profile" disabled={isSubmitting} />			</div>		</form>	);};export default EditUserForm;