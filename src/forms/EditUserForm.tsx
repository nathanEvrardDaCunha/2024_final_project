import React, { useState, useEffect } from 'react';import editUserFormHook from "../hooks/editUserFormHook";import SubmitButton from "../components/common/forms/SubmitButton";import PersonalInfoForm from "./PersonalInfoForm";import PasswordChangeForm from "./PasswordChangeForm";interface EditUserFormProps {	userInfo: {		email: string;		firstname: string;		lastname: string;		birthDate: string;		phoneNumber: string;	};	onCancel: () => void;	onUpdate: (updatedInfo: any) => void;}const EditUserForm: React.FC<EditUserFormProps> = ({ userInfo, onCancel, onUpdate }) => {	const { formData, errors, isSubmitting, attemptedSubmit, handleChange, handleSubmit } = editUserFormHook(userInfo, onUpdate);	const [showPasswordFields, setShowPasswordFields] = useState(false);		const resetPersonalInfo = () => {		Object.keys(userInfo).forEach(key => {			handleChange({ target: { name: key, value: userInfo[key as keyof typeof userInfo] } } as React.ChangeEvent<HTMLInputElement>);		});	};		const resetPasswordFields = () => {		['currentPassword', 'newPassword', 'confirmPassword'].forEach(field => {			handleChange({ target: { name: field, value: '' } } as React.ChangeEvent<HTMLInputElement>);		});	};		const togglePasswordFields = () => {		if (showPasswordFields) {			resetPasswordFields();		} else {			resetPersonalInfo();		}		setShowPasswordFields(!showPasswordFields);	};		useEffect(() => {		if (showPasswordFields) {			resetPasswordFields();		} else {			resetPersonalInfo();		}	}, [showPasswordFields]);		return (		<form onSubmit={handleSubmit}>			{showPasswordFields				? <PasswordChangeForm formData={formData} errors={errors} attemptedSubmit={attemptedSubmit} handleChange={handleChange} />				: <PersonalInfoForm formData={formData} errors={errors} attemptedSubmit={attemptedSubmit} handleChange={handleChange} />			}			<button type="button" onClick={togglePasswordFields} className="btn btn-secondary mt-4">				{showPasswordFields ? 'Edit Personal Info' : 'Change Password'}			</button>			<div className="flex justify-between mt-4">				<button type="button" onClick={onCancel} className="btn btn-secondary">Cancel</button>				<SubmitButton text="Update Profile" disabled={isSubmitting} />			</div>		</form>	);};export default EditUserForm;