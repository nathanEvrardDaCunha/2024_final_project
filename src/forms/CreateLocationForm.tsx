import React, { useState } from 'react';import { useNavigate } from 'react-router-dom';import FormControl from "../components/common/forms/FormControl";import Label from "../components/common/forms/Label";import WarningMessage from "../components/common/WarningMessage";import SubmitButton from "../components/common/forms/SubmitButton";import Input from "../components/common/forms/Input";import ErrorMessage from "../components/common/ErrorMessage";import createLocationFormHook from "../hooks/createLocationFormHook";const CreateLocationForm: React.FC = () => {	const navigate = useNavigate();	const [createError, setCreateError] = useState<string | null>(null);	const {		formData,		errors,		isSubmitting,		attemptedSubmit,		handleChange,		handleSubmit	} = createLocationFormHook();		const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {		setCreateError(null);		const result = await handleSubmit(e);		if (result && result.success) {			navigate('/dashboard');		} else if (result && result.error) {			setCreateError(typeof result.error === 'string' ? result.error : 'An error occurred while creating the location');		}	};		return (		<form onSubmit={onSubmit} className="space-y-4">			{createError && <ErrorMessage message={createError} />}						<FormControl>				<Label htmlFor="street" text="Street" />				<Input					type="text"					id="street"					name="street"					value={formData.street}					onChange={handleChange}					placeholder="123 Main St"				/>				{attemptedSubmit && errors.street && <WarningMessage message={errors.street} />}			</FormControl>						<FormControl>				<Label htmlFor="country" text="Country" />				<Input					type="text"					id="country"					name="country"					value={formData.country}					onChange={handleChange}					placeholder="United States"				/>				{attemptedSubmit && errors.country && <WarningMessage message={errors.country} />}			</FormControl>						<FormControl>				<Label htmlFor="conciergeryType" text="Conciergery Type" />				<select					id="conciergeryType"					name="conciergeryType"					value={formData.conciergeryType}					onChange={handleChange}					className="select select-bordered w-full"				>					<option value="">Select Conciergery Type</option>					<option value="ALL_IN_ONE">All in One</option>					<option value="NO_PRESTATION">No Prestation</option>					<option value="MAINTENANCE_ONLY">Maintenance Only</option>					<option value="PROMOTIONAL_ONLY">Promotional Only</option>				</select>				{attemptedSubmit && errors.conciergeryType && <WarningMessage message={errors.conciergeryType} />}			</FormControl>						<FormControl>				<Label htmlFor="houseType" text="House Type" />				<select					id="houseType"					name="houseType"					value={formData.houseType}					onChange={handleChange}					className="select select-bordered w-full"				>					<option value="">Select House Type</option>					<option value="OLD_HOUSE">Old House</option>					<option value="APPARTMENT">Apartment</option>					<option value="SECONDARY_RESIDENCE">Secondary Residence</option>					<option value="PRIMARY_RESIDENCE">Primary Residence</option>				</select>				{attemptedSubmit && errors.houseType && <WarningMessage message={errors.houseType} />}			</FormControl>						<FormControl>				<Label htmlFor="locationType" text="Location Type" />				<select					id="locationType"					name="locationType"					value={formData.locationType}					onChange={handleChange}					className="select select-bordered w-full"				>					<option value="">Select Location Type</option>					<option value="EMPTY_RENTAL">Empty Rental</option>					<option value="FURNISHED_RENTAL">Furnished Rental</option>					<option value="CAVATION_RENTAL">Cavation Rental</option>				</select>				{attemptedSubmit && errors.locationType && <WarningMessage message={errors.locationType} />}			</FormControl>						<FormControl>				<Label htmlFor="numberOfBedroom" text="Number of Bedrooms" />				<Input					type="number"					id="numberOfBedroom"					name="numberOfBedroom"					value={formData.numberOfBedroom}					onChange={handleChange}					placeholder="2"				/>				{attemptedSubmit && errors.numberOfBedroom && <WarningMessage message={errors.numberOfBedroom} />}			</FormControl>						<FormControl>				<Label htmlFor="maximumNumberOfPeople" text="Maximum Number of People" />				<Input					type="number"					id="maximumNumberOfPeople"					name="maximumNumberOfPeople"					value={formData.maximumNumberOfPeople}					onChange={handleChange}					placeholder="4"				/>				{attemptedSubmit && errors.maximumNumberOfPeople && <WarningMessage message={errors.maximumNumberOfPeople} />}			</FormControl>						<FormControl>				<Label htmlFor="surfaceM2" text="Surface (mÂ²)" />				<Input					type="number"					id="surfaceM2"					name="surfaceM2"					value={formData.surfaceM2}					onChange={handleChange}					placeholder="100"				/>				{attemptedSubmit && errors.surfaceM2 && <WarningMessage message={errors.surfaceM2} />}			</FormControl>						<FormControl>				<Label htmlFor="price" text="Price" />				<Input					type="number"					id="price"					name="price"					value={formData.price}					onChange={handleChange}					placeholder="1000"				/>				{attemptedSubmit && errors.price && <WarningMessage message={errors.price} />}			</FormControl>						<SubmitButton text="Create Location" disabled={isSubmitting} />		</form>	);};export default CreateLocationForm;