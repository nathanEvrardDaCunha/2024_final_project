import React, { useState } from 'react';import { useParams, useNavigate } from 'react-router-dom';import Header from "../components/layout/header/Header";import Footer from "../components/layout/Footer";import BigCard from "../components/common/cards/BigCard";import CardBody from "../components/common/cards/CardBody";import CardTitleCentered from "../components/common/cards/CardTitleCentered";import adminLocationReviewHook from "../hooks/adminLocationReviewHook";const LocationReview = () => {	const { locationId } = useParams();	const navigate = useNavigate();	const { location, uploadImage, completePaperwork, removeDocument, isLoading, error } = adminLocationReviewHook(Number(locationId));	const [selectedFiles, setSelectedFiles] = useState<File[]>([]);		if (isLoading) return (		<div className="min-h-screen flex justify-center items-center bg-gray-100">			<span className="loading loading-spinner loading-lg text-primary"></span>		</div>	);		if (error) return (		<div className="min-h-screen flex justify-center items-center bg-gray-100">			<div className="alert alert-error shadow-lg max-w-md">				<div>					<svg xmlns="http://www.w3.org/2000/svg" className="stroke-current flex-shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>					<span>{error}</span>				</div>			</div>		</div>	);		const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {		if (event.target.files) {			setSelectedFiles(Array.from(event.target.files));		}	};		const handleUpload = async () => {		for (const file of selectedFiles) {			await uploadImage(file);		}		setSelectedFiles([]);	};		const handleRemoveDocument = async (documentId: number) => {		await removeDocument(documentId);	};		const handleCompletePaperwork = async () => {		await completePaperwork();		navigate('/admin/locations');	};		return (		<div className="flex flex-col min-h-screen bg-gray-100">			<Header />			<main className="flex-grow container mx-auto px-4 py-8">				<h1 className="text-4xl font-bold text-center mb-12 text-gray-800">Review Location: {location?.title}</h1>				<BigCard className="shadow-xl">					<CardBody>						<CardTitleCentered text="Upload Images" className="text-xl mb-4" />						<div className="space-y-4">							<input type="file" className="file-input file-input-bordered w-full" onChange={handleFileChange} multiple />							<button className="btn btn-primary w-full" onClick={handleUpload} disabled={selectedFiles.length === 0}>								Upload Selected Files							</button>							{location && location.documents && location.documents.length > 0 && (								<div>									<h3 className="font-semibold mb-2">Uploaded Files:</h3>									<ul className="list-disc list-inside">										{location.documents.map((doc) => (											<li key={doc.id} className="flex justify-between items-center">												<span>{doc.filename}</span>												<button													onClick={() => handleRemoveDocument(doc.id)}													className="btn btn-sm btn-error"												>													X												</button>											</li>										))}									</ul>								</div>							)}							<button								className="btn btn-success w-full"								onClick={handleCompletePaperwork}								disabled={!location || !location.documents || location.documents.length === 0}							>								Complete Paperwork							</button>						</div>					</CardBody>				</BigCard>			</main>			<Footer />		</div>	);};export default LocationReview;