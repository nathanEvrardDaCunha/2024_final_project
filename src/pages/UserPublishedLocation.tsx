import React from 'react';import Header from "../components/layout/header/Header";import Footer from "../components/layout/Footer";import BigCard from "../components/common/cards/BigCard";import CardBody from "../components/common/cards/CardBody";import CardTitleCentered from "../components/common/cards/CardTitleCentered";import { PublishedLocation } from "../types/adminLocationType";import useUserPublishedLocations from "../hooks/useUserPublishedLocation.tsx";const UserPublishedLocations: React.FC = () => {	const { locations, isLoading, error } = useUserPublishedLocations();		if (isLoading) return (		<div className="min-h-screen flex justify-center items-center bg-gray-100">			<span className="loading loading-spinner loading-lg text-primary"></span>		</div>	);		if (error) return (		<div className="min-h-screen flex justify-center items-center bg-gray-100">			<div className="alert alert-error shadow-lg max-w-md">				<div>					<svg xmlns="http://www.w3.org/2000/svg" className="stroke-current flex-shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>					<span>{error}</span>				</div>			</div>		</div>	);		return (		<div className="flex flex-col min-h-screen bg-gray-100">			<Header />			<main className="flex-grow container mx-auto px-4 py-8">				<h1 className="text-4xl font-bold text-center mb-12 text-gray-800">My Published Locations</h1>				{locations.length === 0 ? (					<p className="text-center text-xl text-gray-600">You don't have any published locations yet.</p>				) : (					<div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">						{locations.map((location: PublishedLocation) => (							<BigCard key={location.id} className="shadow-xl">								{location.documents.length > 0 && (									<img										src={`data:image/jpeg;base64,${location.documents[0].file}`}										alt={location.title}										className="w-full h-48 object-cover"									/>								)}								<CardBody>									<CardTitleCentered text={location.title} className="text-xl mb-4" />									<div className="space-y-3">										<div className="flex justify-between">											<span className="font-semibold">Price per night:</span>											<span className="text-success font-bold">${location.pricePerNight}</span>										</div>										<div className="flex justify-between">											<span className="font-semibold">Surface:</span>											<span>{location.surfaceM2} mÂ²</span>										</div>										<div className="flex justify-between">											<span className="font-semibold">Max persons:</span>											<span>{location.maxNumberOfPerson}</span>										</div>										<div className="flex justify-between">											<span className="font-semibold">Country:</span>											<span>{location.country}</span>										</div>										<div className="flex justify-between">											<span className="font-semibold">Street:</span>											<span>{location.street}</span>										</div>										<div className="flex justify-between">											<span className="font-semibold">Type:</span>											<span>{location.locationType}</span>										</div>										<div className="flex justify-between">											<span className="font-semibold">Good Type:</span>											<span>{location.locationGoodType}</span>										</div>									</div>								</CardBody>							</BigCard>						))}					</div>				)}			</main>			<Footer />		</div>	);};export default UserPublishedLocations;