import React, { useState } from 'react';import FormControl from '../components/common/forms/FormControl.tsx';import Label from '../components/common/forms/Label.tsx';import Input from '../components/common/forms/Input.tsx';import SubmitButton from "../components/common/forms/SubmitButton.tsx";import CardTitleCentered from "../components/common/cards/CardTitleCentered.tsx";import CardBody from "../components/common/cards/CardBody.tsx";import ContentBackground from "../components/layout/ContentBackground.tsx";import BigCard from "../components/common/cards/BigCard.tsx";const Register = () => {	const [formData, setFormData] = useState({		email: '',		firstname: '',		lastname: '',		birthDate: '',		phoneNumber: ''	});		const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {		const { name, value } = e.target;		setFormData(prevState => ({			...prevState,			[name]: value		}));	};		const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {		e.preventDefault();		try {			const response = await fetch('http://localhost:3000/auth/register', {				method: 'POST',				headers: {					'Content-Type': 'application/json',				},				body: JSON.stringify(formData),			});						if (!response.ok) {				throw new Error('Registration failed');			}						const data = await response.json();			console.log('Registration successful:', data);		} catch (error) {			console.error('Registration error:', error);		}	};		return (		<ContentBackground>			<BigCard>				<CardBody>					<CardTitleCentered text="Register" />					<form onSubmit={handleSubmit}>						<FormControl>							<Label htmlFor="email" text="Email" />							<Input								type="email"								name="email"								value={formData.email}								onChange={handleChange}								placeholder="Email"								required							/>						</FormControl>						<FormControl>							<Label htmlFor="firstname" text="First Name" />							<Input								type="text"								name="firstname"								value={formData.firstname}								onChange={handleChange}								placeholder="First Name"								required							/>						</FormControl>						<FormControl>							<Label htmlFor="lastname" text="Last Name" />							<Input								type="text"								name="lastname"								value={formData.lastname}								onChange={handleChange}								placeholder="Last Name"								required							/>						</FormControl>						<FormControl>							<Label htmlFor="birthDate" text="Birth Date" />							<Input								type="date"								name="birthDate"								value={formData.birthDate}								onChange={handleChange}								required							/>						</FormControl>						<FormControl>							<Label htmlFor="phoneNumber" text="Phone Number" />							<Input								type="tel"								name="phoneNumber"								value={formData.phoneNumber}								onChange={handleChange}								placeholder="Phone Number"								required							/>						</FormControl>						<SubmitButton text="Register" />					</form>				</CardBody>			</BigCard>		</ContentBackground>	);};export default Register;