import React, { useState, useEffect } from 'react';import { useParams } from 'react-router-dom';import Header from '../components/layout/header/Header';import Footer from '../components/layout/Footer';import { getLocationFinances } from '../hooks/adminLocationService';import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';interface FinanceStats {	usersByMembership: {		[key: string]: number;	};	grossRevenue: number;	revenueByMonth: {		[key: string]: number;	};}const LocationFinances: React.FC = () => {	const { id } = useParams<{ id: string }>();	const [financeStats, setFinanceStats] = useState<FinanceStats | null>(null);	const [isLoading, setIsLoading] = useState(true);	const [error, setError] = useState<string | null>(null);		useEffect(() => {		const fetchFinanceStats = async () => {			if (id) {				try {					setIsLoading(true);					const stats = await getLocationFinances(parseInt(id));					setFinanceStats(stats);				} catch (error) {					console.error('Error fetching finance stats:', error);					setError('Failed to load finance statistics. Please try again later.');				} finally {					setIsLoading(false);				}			}		};		fetchFinanceStats();	}, [id]);		if (isLoading) {		return <div className="min-h-screen flex justify-center items-center">			<span className="loading loading-spinner loading-lg"></span>		</div>;	}		if (error || !financeStats) {		return <div className="min-h-screen flex justify-center items-center">			<p className="text-red-500">{error || 'Failed to load finance statistics.'}</p>		</div>;	}		const membershipData = Object.entries(financeStats.usersByMembership).map(([status, count]) => ({		status,		count	}));		const revenueData = Object.entries(financeStats.revenueByMonth).map(([month, revenue]) => ({		month,		revenue	}));		return (		<div className="flex flex-col min-h-screen bg-base-200">			<Header />			<main className="flex-grow container mx-auto px-4 py-8">				<h1 className="text-3xl font-bold mb-6">Location Finance Statistics</h1>								<div className="grid grid-cols-1 md:grid-cols-2 gap-6">					<div className="card bg-base-100 shadow-xl">						<div className="card-body">							<h2 className="card-title">Users by Membership</h2>							<ResponsiveContainer width="100%" height={300}>								<BarChart data={membershipData}>									<CartesianGrid strokeDasharray="3 3" />									<XAxis dataKey="status" />									<YAxis />									<Tooltip />									<Legend />									<Bar dataKey="count" fill="#8884d8" />								</BarChart>							</ResponsiveContainer>						</div>					</div>										<div className="card bg-base-100 shadow-xl">						<div className="card-body">							<h2 className="card-title">Gross Revenue</h2>							<p className="text-3xl font-bold">${financeStats.grossRevenue.toFixed(2)}</p>						</div>					</div>										<div className="card bg-base-100 shadow-xl col-span-1 md:col-span-2">						<div className="card-body">							<h2 className="card-title">Monthly Revenue</h2>							<ResponsiveContainer width="100%" height={300}>								<BarChart data={revenueData}>									<CartesianGrid strokeDasharray="3 3" />									<XAxis dataKey="month" />									<YAxis />									<Tooltip />									<Legend />									<Bar dataKey="revenue" fill="#82ca9d" />								</BarChart>							</ResponsiveContainer>						</div>					</div>				</div>			</main>			<Footer />		</div>	);};export default LocationFinances;