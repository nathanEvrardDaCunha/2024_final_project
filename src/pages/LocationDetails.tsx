import React, { useState, useEffect } from 'react';import { useParams } from 'react-router-dom';import Header from '../components/layout/header/Header';import Footer from '../components/layout/Footer';import { PublishedLocation, Perk } from '../types/adminLocationType';import {getLocationById} from "../hooks/adminLocationService.tsx";const LocationDetails: React.FC = () => {	const { id } = useParams<{ id: string }>();	const [location, setLocation] = useState<PublishedLocation | null>(null);	const [currentImageIndex, setCurrentImageIndex] = useState(0);		useEffect(() => {		const fetchLocation = async () => {			if (id) {				const fetchedLocation = await getLocationById(parseInt(id));				setLocation(fetchedLocation);			}		};		fetchLocation();	}, [id]);		if (!location) {		return (			<div className="min-h-screen flex justify-center items-center">				<span className="loading loading-spinner loading-lg"></span>			</div>		);	}		const handlePrevImage = () => {		setCurrentImageIndex((prevIndex) =>			prevIndex === 0 ? location.documents.length - 1 : prevIndex - 1		);	};		const handleNextImage = () => {		setCurrentImageIndex((prevIndex) =>			prevIndex === location.documents.length - 1 ? 0 : prevIndex + 1		);	};		const renderPerkIcon = (perkType: string) => {		// You can replace these with actual icons from your preferred icon library		switch (perkType) {			case 'KITCHEN':				return '🍳';			case 'BATHROOM':				return '🚿';			case 'WASHING_MACHINE':				return '🧺';			case 'WIFI':				return '📶';			case 'AIR_CONDITIONING':				return '❄️';			case 'HOT_WATER':				return '🚰';			case 'SMOKE_DETECTOR':				return '🚭';			case 'HEATING':				return '🔥';			case 'PARKING':				return '🅿️';			case 'TELEVISION':				return '📺';			case 'WORKSPACE':				return '💼';			case 'SWIMMING_POOL':				return '🏊';			default:				return '✨';		}	};		return (		<div className="flex flex-col min-h-screen bg-base-200">			<Header />			<main className="flex-grow container mx-auto px-4 py-8">				<div className="card bg-base-100 shadow-xl">					<figure className="relative">						<img							src={`data:image/jpeg;base64,${location.documents[currentImageIndex].file}`}							alt={`${location.title} - Image ${currentImageIndex + 1}`}							className="w-full h-96 object-cover"						/>						<div className="absolute inset-0 flex justify-between items-center px-4">							<button onClick={handlePrevImage} className="btn btn-circle">❮</button>							<button onClick={handleNextImage} className="btn btn-circle">❯</button>						</div>					</figure>					<div className="card-body">						<h2 className="card-title text-3xl">{location.title}</h2>						<div className="grid grid-cols-1 md:grid-cols-2 gap-4">							<div className="stats shadow">								<div className="stat">									<div className="stat-title">Price per night</div>									<div className="stat-value text-primary">${location.pricePerNight}</div>								</div>							</div>							<div className="stats shadow">								<div className="stat">									<div className="stat-title">Surface</div>									<div className="stat-value">{location.surfaceM2} m²</div>								</div>							</div>							<div className="stats shadow">								<div className="stat">									<div className="stat-title">Max persons</div>									<div className="stat-value">{location.maxNumberOfPerson}</div>								</div>							</div>							<div className="stats shadow">								<div className="stat">									<div className="stat-title">Country</div>									<div className="stat-value text-sm">{location.country}</div>								</div>							</div>							<div className="stats shadow">								<div className="stat">									<div className="stat-title">Street</div>									<div className="stat-value text-sm">{location.street}</div>								</div>							</div>							<div className="stats shadow">								<div className="stat">									<div className="stat-title">Type</div>									<div className="stat-value text-sm">{location.locationType}</div>								</div>							</div>							<div className="stats shadow">								<div className="stat">									<div className="stat-title">Good Type</div>									<div className="stat-value text-sm">{location.locationGoodType}</div>								</div>							</div>						</div>					</div>				</div>								<div className="card bg-base-100 shadow-xl mt-8">					<div className="card-body">						<h2 className="card-title text-2xl mb-4">Perks</h2>						<div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">							{location.perks && location.perks.map((perk: Perk) => (								<div key={perk.id} className="flex items-center bg-base-200 p-2 rounded-lg">									<span className="text-2xl mr-2">{renderPerkIcon(perk.perkType)}</span>									<span>{perk.perkName}</span>								</div>							))}						</div>					</div>				</div>			</main>			<Footer />		</div>	);};export default LocationDetails;